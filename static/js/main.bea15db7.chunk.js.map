{"version":3,"sources":["components/Error.jsx","components/Pregunta.jsx","components/Formulario.jsx","components/Gasto.jsx","components/Listado.jsx","helpers.js","components/ControlPresupuesto.jsx","App.js","reportWebVitals.js","index.js"],"names":["Error","mensaje","className","Pregunta","guardarPresupuesto","guardarRestante","actualizarPregunta","useState","cantidad","guardarCantidad","error","guardarError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","guardarGasto","guardarCrearGasto","nombre","guardarNombre","trim","gastos","id","shortid","generate","Gastos","gasto","Listado","map","Gasto","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","App","mostrarpregunta","guardarGastos","creargasto","useEffect","presupuestoRestante","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bea15db7.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Error = ({mensaje}) => ( \r\n    <p className=\"alert alert-danger error\">{mensaje}</p>\r\n );\r\n\r\n Error.propTypes = {\r\n    mensaje: PropTypes.string.isRequired\r\n }\r\n \r\nexport default Error;","import { Fragment, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport Error from \"./Error\";\r\n\r\nconst Pregunta = ({guardarPresupuesto, guardarRestante, actualizarPregunta}) => {\r\n\r\n    //Definimos el State de Pregunta\r\n    const [cantidad, guardarCantidad] = useState(0);\r\n\r\n    const [error, guardarError] = useState(false);\r\n\r\n    // Función que lee el presupuesto\r\n    const definirPresupuesto = e =>{\r\n        guardarCantidad(parseInt(e.target.value, 10));\r\n    }\r\n\r\n    // Submit para definir presupuesto\r\n    const agregarPresupuesto = e =>{\r\n        e.preventDefault();\r\n\r\n        // Validar\r\n        // isNaN(): devuelve \"true\" si el valor es vacio\r\n        if( cantidad < 1 || isNaN(cantidad) ){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        // Si se pasa la validación\r\n        guardarError(false);\r\n\r\n        guardarPresupuesto(cantidad);\r\n        guardarRestante(cantidad);\r\n        actualizarPregunta(false);\r\n    }\r\n\r\n\r\n    return ( \r\n        <Fragment>\r\n            <h2>Coloca tu presupuesto</h2>\r\n\r\n            {error ? <Error mensaje=\"El Presupuesto es Incorrecto\"/> : null}\r\n\r\n            <form\r\n                onSubmit={agregarPresupuesto}\r\n            >\r\n                <input \r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Coloca tu presupuesto\"\r\n                    onChange={definirPresupuesto}\r\n                />\r\n\r\n                <input \r\n                    type=\"submit\"\r\n                    className=\"button-primary u-full-width\"\r\n                    value=\"Definir Presupuesto\"\r\n                />\r\n            </form>\r\n        </Fragment>\r\n     );\r\n}\r\n\r\nPregunta.propTypes = {\r\n    guardarPresupuesto: PropTypes.func.isRequired,\r\n    guardarRestante: PropTypes.func.isRequired,\r\n    actualizarPregunta: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Pregunta;","import { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport Error from \"./Error\";\r\n\r\nconst Formulario = ({guardarGasto, guardarCrearGasto}) => {\r\n\r\n    //Definimos el State del Formulario\r\n    const [nombre, guardarNombre] = useState('');\r\n    const [cantidad, guardarCantidad] = useState(0);\r\n    const [error, guardarError] = useState(false);\r\n\r\n    // Cuando el usuario agrega un gasto\r\n    const agregarGasto = e => {\r\n        e.preventDefault();\r\n\r\n        // Validar \r\n        // isNaN(): devuelve \"true\" si el valor es vacio\r\n        if( cantidad < 1 || isNaN(cantidad) || nombre.trim() === ''){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        guardarError(false);\r\n\r\n        // Construir el gasto\r\n        const gastos = {\r\n            nombre,\r\n            cantidad,\r\n            id: shortid.generate()\r\n        }\r\n\r\n        // Pasar el gasto al componente principal \r\n        guardarGasto(gastos);\r\n        guardarCrearGasto(true);\r\n\r\n        // Resetear el formulario\r\n        guardarNombre('');\r\n        guardarCantidad(0);\r\n    }\r\n\r\n    return ( \r\n        <form\r\n            onSubmit={agregarGasto}\r\n        >\r\n            <h2>Agrega tus gastos aquí</h2>\r\n\r\n            {error ? <Error mensaje=\"Ambos campos son obligatorios o presupuesto incorrecto.\"/> : null}\r\n\r\n            <div className=\"campo\">\r\n                <label>Nombre Gasto</label>\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. Transporte\"\r\n                    value={nombre}\r\n                    onChange={e => guardarNombre(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"campo\">\r\n                <label>Cantidad Gasto</label>\r\n                <input \r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. 300\"\r\n                    value={cantidad}\r\n                    onChange={e => guardarCantidad(parseInt(e.target.value))}\r\n                />\r\n            </div>\r\n\r\n            <input \r\n                type=\"submit\"\r\n                className=\"button-primary u-full-width\"\r\n                value=\"Agregar Gasto\"\r\n            />\r\n        </form>\r\n     );\r\n}\r\n\r\nFormulario.propTypes = {\r\n    guardarGasto: PropTypes.func.isRequired,\r\n    guardarCrearGasto: PropTypes.func.isRequired,\r\n}\r\n \r\nexport default Formulario;","import PropTypes from 'prop-types';\r\n\r\nconst Gastos = ({gasto}) => (\r\n    <li className=\"gastos\">\r\n        <p>\r\n            {gasto.nombre}\r\n            <span className=\"gasto\">$ {gasto.cantidad}</span>\r\n        </p>\r\n    </li>\r\n);\r\n \r\nGastos.propTypes = {\r\n    gasto: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Gastos;","import Gasto from \"./Gasto\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Listado = ({gastos}) => ( \r\n    <div className=\"gastos-realizados\">\r\n        <h2>Listado</h2>\r\n        {gastos.map(gasto => (\r\n            <Gasto\r\n                key={gasto.id}\r\n                gasto={gasto}\r\n            />\r\n        ))}\r\n    </div>\r\n);\r\n \r\nListado.propTypes = {\r\n    gastos: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Listado;","export const revisarPresupuesto = (presupuesto, restante) => {\r\n    let clase;\r\n\r\n    if( ( presupuesto / 4 ) > restante){\r\n        clase = 'alert alert-danger';\r\n    }else if( ( presupuesto / 2 ) > restante){\r\n        clase = 'alert alert-warning';\r\n    }else{\r\n        clase = 'alert alert-success';\r\n    }\r\n\r\n    return clase;\r\n}","import { Fragment} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { revisarPresupuesto } from \"../helpers\";\r\n\r\nconst ControlPresupuesto = ({presupuesto,restante}) => (\r\n    <Fragment>\r\n        <div className=\"alert alert-primary\">\r\n            Presupuesto: $ {presupuesto}\r\n        </div>\r\n        <div className={revisarPresupuesto(presupuesto, restante)}>\r\n            Restante: $ {restante}\r\n        </div>\r\n    </Fragment>\r\n);\r\n\r\nControlPresupuesto.propTypes = {\r\n    presupuesto: PropTypes.number.isRequired,\r\n    restante: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default ControlPresupuesto;","import {useState, useEffect} from \"react\";\nimport Pregunta from './components/Pregunta';\nimport Formulario from './components/Formulario';\nimport Listado from './components/Listado';\nimport ControlPresupuesto from './components/ControlPresupuesto';\n\nfunction App() {\n\n  //Definimos los States\n  const [presupuesto, guardarPresupuesto] = useState(0);\n  const [restante, guardarRestante] = useState(0);\n  const [mostrarpregunta, actualizarPregunta] = useState(true);\n  const [gastos, guardarGastos] = useState([]);\n  const [gasto, guardarGasto] = useState({});\n  const [creargasto, guardarCrearGasto] = useState(false);  \n\nuseEffect(() => {\n\n  if(creargasto){\n\n    // Agrega el nuevo presupuesto\n    guardarGastos([\n      ...gastos,\n      gasto\n    ])\n\n    // Resta el presupuesto actual\n    const presupuestoRestante = restante - gasto.cantidad;\n    guardarRestante(presupuestoRestante);\n\n\n    // Reseteamos Condición de Listado de Gastos\n    guardarCrearGasto(false);\n  }\n}, [gasto, creargasto, restante, gastos])\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Gasto Semanal</h1>\n\n        <div className=\"contenido-principal contenido\">\n          { mostrarpregunta ? \n            ( <Pregunta\n              guardarPresupuesto={guardarPresupuesto}\n              guardarRestante={guardarRestante}\n              actualizarPregunta={actualizarPregunta}\n            />)\n            :\n            (<div className=\"row\">\n              <div className=\"one-half column\">\n                <Formulario\n                  guardarGasto={guardarGasto}\n                  guardarCrearGasto={guardarCrearGasto}\n                />\n              </div>\n              <div className=\"one-half column\">\n                <ControlPresupuesto\n                  presupuesto={presupuesto}\n                  restante={restante}\n                />\n                <Listado\n                  gastos={gastos}\n                />\n              </div>\n            </div>)\n          }\n\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}